//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: Bbb.proto

@kotlin.jvm.JvmName("-initializesimpleMessage")
public inline fun simpleMessage(block: SimpleMessageKt.Dsl.() -> kotlin.Unit): Bbb.SimpleMessage =
  SimpleMessageKt.Dsl._create(Bbb.SimpleMessage.newBuilder()).apply { block() }._build()
public object SimpleMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: Bbb.SimpleMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Bbb.SimpleMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Bbb.SimpleMessage = _builder.build()

    /**
     * <code>uint64 id = 1;</code>
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>uint64 id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>.SimpleMessage.Type message_type = 2;</code>
     */
    public var messageType: Bbb.SimpleMessage.Type
      @JvmName("getMessageType")
      get() = _builder.getMessageType()
      @JvmName("setMessageType")
      set(value) {
        _builder.setMessageType(value)
      }
    /**
     * <code>.SimpleMessage.Type message_type = 2;</code>
     */
    public fun clearMessageType() {
      _builder.clearMessageType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class HeadersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     */
     public val headers: com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getHeadersList()
      )
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     * @param value The headers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addHeaders")
    public fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.add(value: Bbb.SimpleMessage.HeaderItem) {
      _builder.addHeaders(value)
    }
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     * @param value The headers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignHeaders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.plusAssign(value: Bbb.SimpleMessage.HeaderItem) {
      add(value)
    }
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     * @param values The headers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllHeaders")
    public fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.addAll(values: kotlin.collections.Iterable<Bbb.SimpleMessage.HeaderItem>) {
      _builder.addAllHeaders(values)
    }
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     * @param values The headers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllHeaders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.plusAssign(values: kotlin.collections.Iterable<Bbb.SimpleMessage.HeaderItem>) {
      addAll(values)
    }
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     * @param index The index to set the value at.
     * @param value The headers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setHeaders")
    public operator fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.set(index: kotlin.Int, value: Bbb.SimpleMessage.HeaderItem) {
      _builder.setHeaders(index, value)
    }
    /**
     * <code>repeated .SimpleMessage.HeaderItem headers = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearHeaders")
    public fun com.google.protobuf.kotlin.DslList<Bbb.SimpleMessage.HeaderItem, HeadersProxy>.clear() {
      _builder.clearHeaders()
    }


    /**
     * <code>bytes blob = 4;</code>
     */
    public var blob: com.google.protobuf.ByteString
      @JvmName("getBlob")
      get() = _builder.getBlob()
      @JvmName("setBlob")
      set(value) {
        _builder.setBlob(value)
      }
    /**
     * <code>bytes blob = 4;</code>
     */
    public fun clearBlob() {
      _builder.clearBlob()
    }
  }
  @kotlin.jvm.JvmName("-initializeheaderItem")
  public inline fun headerItem(block: SimpleMessageKt.HeaderItemKt.Dsl.() -> kotlin.Unit): Bbb.SimpleMessage.HeaderItem =
    SimpleMessageKt.HeaderItemKt.Dsl._create(Bbb.SimpleMessage.HeaderItem.newBuilder()).apply { block() }._build()
  public object HeaderItemKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: Bbb.SimpleMessage.HeaderItem.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: Bbb.SimpleMessage.HeaderItem.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): Bbb.SimpleMessage.HeaderItem = _builder.build()

      /**
       * <code>string name = 1;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>string name = 1;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }

      /**
       * <code>string value = 2;</code>
       */
      public var value: kotlin.String
        @JvmName("getValue")
        get() = _builder.getValue()
        @JvmName("setValue")
        set(value) {
          _builder.setValue(value)
        }
      /**
       * <code>string value = 2;</code>
       */
      public fun clearValue() {
        _builder.clearValue()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun Bbb.SimpleMessage.copy(block: SimpleMessageKt.Dsl.() -> kotlin.Unit): Bbb.SimpleMessage =
  SimpleMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun Bbb.SimpleMessage.HeaderItem.copy(block: SimpleMessageKt.HeaderItemKt.Dsl.() -> kotlin.Unit): Bbb.SimpleMessage.HeaderItem =
  SimpleMessageKt.HeaderItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

